name: Tests

on:
  schedule:
    - cron: '42 9 * * 2' # At 9:42 UTC on Tuesday
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # pick lower and upper versions only
        python-version: ["3.9", "3.13"]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python ${{ matrix.python-version }}
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          python-version: ${{ matrix.python-version }}

      - name: Run tests with required packages
        run: |
          uv sync --extra test
          uv run pytest -v

      - name: Run tests with optional packages
        run: |
          uv sync --all-extras
          # Avoid: Matplotlib is building the font cache; this may take a moment
          uv run python -c "import matplotlib; matplotlib.get_cachedir()"
          uv run pytest -n2 -v --cov

      - name: Run doctest
        run: |
          uv run pytest -v --doctest-modules src

      - name: Run tests with older packages
        if: matrix.python-version == '3.9'
        run: |
          uv pip uninstall netcdf4 xarray
          uv pip install "affine<2.0" "pandas<2.0" "geopandas<1.0" "fiona<1.9" "shapely<2.0" "numpy<2.0" "flopy<3.5"
          uv pip check
          uv run pytest -v -n2 --cov --cov-append

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Minimize uv cache
        run: uv cache prune --ci
